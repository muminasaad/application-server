{"version":3,"sources":["C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/$_gendir lazy","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.css","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.html","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.ts","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.module.ts","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/environments/environment.ts","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/libraries/pdfobject.js","C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#pdfLocation {\\r\\n    width: 98%;\\r\\n    height: 90vh;\\r\\n    padding: 1%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"pdfLocation\\\" style=\\\"text-align:center\\\">\\n  <div  #pdfLocation></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import '../libraries/pdfobject';\nimport { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  @ViewChild('pdfLocation') pdfLocationDiv: ElementRef;\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit(): void {\n\n    getWindow().PDFObject.embed('/assets/Resume_Vol1.pdf', '#pdfLocation');\n\n  }\n\n\n\n}\n\n\nfunction getWindow(): any {\n  return window;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.component.ts","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/environments/environment.ts","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.0.201604172\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2016 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.0.201604172\",\n        supportsPDFs,\n\n        //declare functions\n        createAXO,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(navigator.userAgent.toLowerCase())); })(),\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (supportsPdfMimeType || (isIE() && supportsPdfActiveX()));\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else if(supportsPDFs){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        } else {\n\n            if(PDFJS_URL){\n\n                return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n            } else if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/libraries/pdfobject.js\n// module id = ../../../../../src/libraries/pdfobject.js\n// module chunks = main","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/mumin/Documents/NodeProjects/MuminAsaadResume/my-resume/src/main.ts"],"sourceRoot":"webpack:///"}